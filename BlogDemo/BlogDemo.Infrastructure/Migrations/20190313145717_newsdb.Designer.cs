// <auto-generated />
using System;
using BlogDemo.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogDemo.Infrastructure.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20190313145717_newsdb")]
    partial class newsdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogDemo.Core.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Remark");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("BlogDemo.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contents");

                    b.Property<string>("Image");

                    b.Property<int?>("NewsClassifyId");

                    b.Property<DateTime?>("PublishDate");

                    b.Property<string>("Remark");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("NewsClassifyId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("BlogDemo.Core.Entities.NewsClassify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Remark");

                    b.Property<int>("Sort");

                    b.HasKey("Id");

                    b.ToTable("NewsClassify");
                });

            modelBuilder.Entity("BlogDemo.Core.Entities.NewsComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime");

                    b.Property<string>("Contents");

                    b.Property<int?>("NewsId");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsComment");
                });

            modelBuilder.Entity("BlogDemo.Core.Entities.News", b =>
                {
                    b.HasOne("BlogDemo.Core.Entities.NewsClassify", "NewsClassify")
                        .WithMany("News")
                        .HasForeignKey("NewsClassifyId");
                });

            modelBuilder.Entity("BlogDemo.Core.Entities.NewsComment", b =>
                {
                    b.HasOne("BlogDemo.Core.Entities.News", "News")
                        .WithMany("NewsComment")
                        .HasForeignKey("NewsId");
                });
#pragma warning restore 612, 618
        }
    }
}
